from funciones.funciones import *
from funciones.menus import menu

def main():
    usuarios = ["ADMIN", "USER1", "USER2"]  # Lista inicial de usuarios
    carrito = []
    total = 0
    usuario_actual = ""
    
    print("\t\t\t..::‚òï Bienvenido a cafeter√≠a ‚òï::..")
    
    while True:
        opcion = mostrar_menu_principal()
        borrar_pantalla()
        
        match opcion:
            case "1":
                usuario_actual = iniciar_sesion(usuarios)
                if usuario_actual:
                    carrito, total = menu_usuario(usuario_actual, carrito, total)
            case "2":
                usuarios = registrar_usuario(usuarios)
            case "3":
                print("\n\t\t\t..::‚òï Salir ‚òï::..")
                print("\n\t\tGracias por visitar la cafer√≠a. ¬°Hasta luego!")
                break
            case _:
                print("\n\t\t‚ö† Opci√≥n no v√°lida, por favor intente de nuevo. ‚ö†")
                esperar_tecla()

def mostrar_menu_principal():
    print("\t\t\n  1Ô∏è‚É£  Iniciar sesi√≥n \t\t\n  2Ô∏è‚É£  Registrarse \t\t\n  3Ô∏è‚É£  Salir")
    return input("\n\t\tIngrese una opci√≥n (1-3): ").strip()

def iniciar_sesion(usuarios):
    print("\n\t\t\t..::‚òï Iniciar sesi√≥n ‚òï::..")
    usuario = input("\n\t\tIngrese su usuario: ").upper().strip()
    
    if usuario not in usuarios:
        print("\n\t\t‚ö† Usuario no encontrado, por favor intente de nuevo. ‚ö†")
        esperar_tecla()
        return None
    else:
        print(f"\n\t\tBienvenido {usuario} a la cafer√≠a!")
        esperar_tecla()
        return usuario

def registrar_usuario(usuarios):
    print("\n\t\t\t..::‚òï Registrarse ‚òï::..")
    usuario = input("\n\t\tIngrese su usuario: ").upper().strip()
    
    while usuario in usuarios:
        print("\n\t\t‚ö† Usuario ya existe, por favor elija otro. ‚ö†")
        usuario = input("\n\t\tIngrese un nuevo usuario: ").upper().strip()
    
    usuarios.append(usuario)
    print(f"\n\t\tUsuario {usuario} registrado exitosamente!")
    esperar_tecla()
    return usuarios

def menu_usuario(usuario, carrito, total):
    while True:
        borrar_pantalla()
        print(f"\n\t\t\t..::‚òï Bienvenido {usuario} ‚òï::..")
        print("\n\t\t\t..::‚òï Selecciona una opci√≥n ‚òï::..")
        print("\t\t\n  1Ô∏è‚É£  Ver bebidas ü•§")
        print("  2Ô∏è‚É£  Ver comida ü•ó")
        print("  3Ô∏è‚É£  Ver carrito üõí")
        print("  4Ô∏è‚É£  Realizar pedido üí≥")
        print("  5Ô∏è‚É£  Cerrar sesi√≥n üö™")
        
        opcion = input("\n\t\tIngrese una opci√≥n (1-5): ").strip()
        
        match opcion:
            case "1":
                carrito, total = mostrar_bebidas(carrito, total)
            case "2":
                carrito, total = mostrar_comida(carrito, total)
            case "3":
                mostrar_carrito(carrito, total)
            case "4":
                carrito, total = realizar_pedido(carrito, total)
            case "5":
                print(f"\n\t\tHasta luego {usuario}!")
                esperar_tecla()
                break
            case _:
                print("\n\t\t‚ö† Opci√≥n no v√°lida, por favor intente de nuevo. ‚ö†")
                esperar_tecla()
    
    return carrito, total

def mostrar_bebidas(carrito, total):
    while True:
        borrar_pantalla()
        print("\n\t\t\t..::‚òï Bebidas disponibles ‚òï::..")
        print("\t\t1Ô∏è‚É£ Caf√© ‚òï")
        print("\t\t2Ô∏è‚É£ T√© üçµ")
        print("\t\t3Ô∏è‚É£ Volver al men√∫ principal")
        
        opcion = input("\n\t\tIngrese el n√∫mero: ").strip()
        
        match opcion:
            case "1":
                carrito, total = seleccionar_cafe(carrito, total)
            case "2":
                carrito, total = seleccionar_te(carrito, total)
            case "3":
                break
            case _:
                print("\n\t\t‚ö† Opci√≥n no v√°lida, por favor intente de nuevo. ‚ö†")
                esperar_tecla()
    
    return carrito, total

def seleccionar_cafe(carrito, total):
    borrar_pantalla()
    print("\n\t\t\t..::‚òï Tipos de Caf√© ‚òï::..")
    
    cafes = menu["bebidas"]["Cafe"]
    for i, cafe in enumerate(cafes, 1):
        print(f"\t\t{i}Ô∏è‚É£ {cafe['nombre']}")
    print(f"\t\t{len(cafes)+1}Ô∏è‚É£ Volver")
    
    opcion = input("\n\t\tSeleccione su caf√©: ").strip()
    
    try:
        opcion_num = int(opcion)
        if 1 <= opcion_num <= len(cafes):
            cafe_seleccionado = cafes[opcion_num - 1]
            return seleccionar_tamano_cafe(cafe_seleccionado, carrito, total)
        elif opcion_num == len(cafes) + 1:
            return carrito, total
        else:
            print("\n\t\t‚ö† Opci√≥n no v√°lida ‚ö†")
            esperar_tecla()
    except ValueError:
        print("\n\t\t‚ö† Por favor ingrese un n√∫mero v√°lido ‚ö†")
        esperar_tecla()
    
    return carrito, total

def seleccionar_tamano_cafe(cafe, carrito, total):
    borrar_pantalla()
    print(f"\n\t\t\t..::‚òï {cafe['nombre']} ‚òï::..")
    print("\t\t1Ô∏è‚É£ Chico ü•§ - $" + str(cafe['size']['Chico']))
    print("\t\t2Ô∏è‚É£ Grande ü•§ - $" + str(cafe['size']['Grande']))
    print("\t\t3Ô∏è‚É£ Volver")
    
    opcion = input("\n\t\tSeleccione el tama√±o: ").strip()
    
    match opcion:
        case "1":
            item = f"{cafe['nombre']} (Chico)"
            precio = cafe['size']['Chico']
            carrito.append({"item": item, "precio": precio})
            total += precio
            print(f"\n\t\t‚úÖ {item} agregado al carrito - ${precio}")
        case "2":
            item = f"{cafe['nombre']} (Grande)"
            precio = cafe['size']['Grande']
            carrito.append({"item": item, "precio": precio})
            total += precio
            print(f"\n\t\t‚úÖ {item} agregado al carrito - ${precio}")
        case "3":
            return carrito, total
        case _:
            print("\n\t\t‚ö† Opci√≥n no v√°lida ‚ö†")
    
    esperar_tecla()
    return carrito, total

def seleccionar_te(carrito, total):
    borrar_pantalla()
    print("\n\t\t\t..::üçµ Tipos de T√© üçµ::..")
    
    tes = menu["bebidas"]["te"]
    for i, te in enumerate(tes, 1):
        print(f"\t\t{i}Ô∏è‚É£ {te['nombre']} - ${te['precio']}")
    print(f"\t\t{len(tes)+1}Ô∏è‚É£ Volver")
    
    opcion = input("\n\t\tSeleccione su t√©: ").strip()
    
    try:
        opcion_num = int(opcion)
        if 1 <= opcion_num <= len(tes):
            te_seleccionado = tes[opcion_num - 1]
            carrito.append({"item": te_seleccionado['nombre'], "precio": te_seleccionado['precio']})
            total += te_seleccionado['precio']
            print(f"\n\t\t‚úÖ {te_seleccionado['nombre']} agregado al carrito - ${te_seleccionado['precio']}")
            esperar_tecla()
        elif opcion_num == len(tes) + 1:
            return carrito, total
        else:
            print("\n\t\t‚ö† Opci√≥n no v√°lida ‚ö†")
            esperar_tecla()
    except ValueError:
        print("\n\t\t‚ö† Por favor ingrese un n√∫mero v√°lido ‚ö†")
        esperar_tecla()
    
    return carrito, total

def mostrar_comida(carrito, total):
    while True:
        borrar_pantalla()
        print("\n\t\t\t..::üçΩÔ∏è Comida disponible üçΩÔ∏è::..")
        print("\t\t1Ô∏è‚É£ S√°ndwiches ü•™")
        print("\t\t2Ô∏è‚É£ Postres üç∞")
        print("\t\t3Ô∏è‚É£ Volver al men√∫ principal")
        
        opcion = input("\n\t\tIngrese el n√∫mero: ").strip()
        
        match opcion:
            case "1":
                carrito, total = seleccionar_sandwich(carrito, total)
            case "2":
                carrito, total = seleccionar_postre(carrito, total)
            case "3":
                break
            case _:
                print("\n\t\t‚ö† Opci√≥n no v√°lida, por favor intente de nuevo. ‚ö†")
                esperar_tecla()
    
    return carrito, total

def seleccionar_sandwich(carrito, total):
    borrar_pantalla()
    print("\n\t\t\t..::ü•™ S√°ndwiches ü•™::..")
    
    sandwiches = menu["comida"]["sandwiches"]
    for i, sandwich in enumerate(sandwiches, 1):
        print(f"\t\t{i}Ô∏è‚É£ {sandwich['nombre']} - ${sandwich['precio']}")
    print(f"\t\t{len(sandwiches)+1}Ô∏è‚É£ Volver")
    
    opcion = input("\n\t\tSeleccione su s√°ndwich: ").strip()
    
    try:
        opcion_num = int(opcion)
        if 1 <= opcion_num <= len(sandwiches):
            sandwich_seleccionado = sandwiches[opcion_num - 1]
            carrito.append({"item": sandwich_seleccionado['nombre'], "precio": sandwich_seleccionado['precio']})
            total += sandwich_seleccionado['precio']
            print(f"\n\t\t‚úÖ {sandwich_seleccionado['nombre']} agregado al carrito - ${sandwich_seleccionado['precio']}")
            esperar_tecla()
        elif opcion_num == len(sandwiches) + 1:
            return carrito, total
        else:
            print("\n\t\t‚ö† Opci√≥n no v√°lida ‚ö†")
            esperar_tecla()
    except ValueError:
        print("\n\t\t‚ö† Por favor ingrese un n√∫mero v√°lido ‚ö†")
        esperar_tecla()
    
    return carrito, total

def seleccionar_postre(carrito, total):
    borrar_pantalla()
    print("\n\t\t\t..::üç∞ Postres üç∞::..")
    
    postres = menu["comida"]["postres"]
    for i, postre in enumerate(postres, 1):
        print(f"\t\t{i}Ô∏è‚É£ {postre['nombre']} - ${postre['precio']}")
    print(f"\t\t{len(postres)+1}Ô∏è‚É£ Volver")
    
    opcion = input("\n\t\tSeleccione su postre: ").strip()
    
    try:
        opcion_num = int(opcion)
        if 1 <= opcion_num <= len(postres):
            postre_seleccionado = postres[opcion_num - 1]
            carrito.append({"item": postre_seleccionado['nombre'], "precio": postre_seleccionado['precio']})
            total += postre_seleccionado['precio']
            print(f"\n\t\t‚úÖ {postre_seleccionado['nombre']} agregado al carrito - ${postre_seleccionado['precio']}")
            esperar_tecla()
        elif opcion_num == len(postres) + 1:
            return carrito, total
        else:
            print("\n\t\t‚ö† Opci√≥n no v√°lida ‚ö†")
            esperar_tecla()
    except ValueError:
        print("\n\t\t‚ö† Por favor ingrese un n√∫mero v√°lido ‚ö†")
        esperar_tecla()
    
    return carrito, total

def mostrar_carrito(carrito, total):
    borrar_pantalla()
    print("\n\t\t\t..::üõí Tu Carrito üõí::..")
    
    if not carrito:
        print("\n\t\tüõí Tu carrito est√° vac√≠o")
    else:
        print("\n\t\tüìã Art√≠culos en tu carrito:")
        for i, item in enumerate(carrito, 1):
            print(f"\t\t{i}. {item['item']} - ${item['precio']}")
        print(f"\n\t\tüí∞ Total: ${total}")
    
    esperar_tecla()

def realizar_pedido(carrito, total):
    if not carrito:
        print("\n\t\t‚ö† No tienes art√≠culos en tu carrito ‚ö†")
        esperar_tecla()
        return carrito, total
    
    borrar_pantalla()
    print("\n\t\t\t..::üí≥ Realizar Pedido üí≥::..")
    print("\n\t\tüìã Resumen de tu pedido:")
    
    for i, item in enumerate(carrito, 1):
        print(f"\t\t{i}. {item['item']} - ${item['precio']}")
    print(f"\n\t\tüí∞ Total a pagar: ${total}")
    
    confirmacion = input("\n\t\t¬øConfirmar pedido? (s/n): ").lower().strip()
    
    if confirmacion == 's' or confirmacion == 'si':
        print("\n\t\t‚úÖ ¬°Pedido confirmado!")
        print("\n\t\tüöÄ Tu pedido est√° siendo preparado...")
        print("\n\t\t‚è∞ Tiempo estimado: 10-15 minutos")
        carrito.clear()
        total = 0
    else:
        print("\n\t\t‚ùå Pedido cancelado")
    
    esperar_tecla()
    return carrito, total

if __name__ == "__main__":
    main()